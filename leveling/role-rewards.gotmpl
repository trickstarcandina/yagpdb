{{/*
	Regex trigger with trigger `^-(role-?rewards|rr)`
*/}}
{{ $helpMessage := cembed
	"title" "üèÜ Role Rewards"
	"description" (joinStr "\n\n"
		"`rolerewards add <level> <role>`: Th√™m role l√∫c l√™n ƒë∆∞·ª£c 1 c·∫•p nh·∫•t ƒë·ªãnh"
		"`rolerewards remove <level>`: X√≥a role l√∫c l√™n ƒë∆∞·ª£c 1 c·∫•p nh·∫•t ƒë·ªãnh"
		"`rolerewards set-type <highest|stack>`: Set role theo ki·ªÉu... Highest nghƒ©a l√† ch·ªâ nh·∫≠n ƒë∆∞·ª£c 1 role cao nh·∫•t <=> c·∫•p ƒë·ªô hi·ªán t·∫°i. Stack l√† l√† nh·∫≠n t·∫•t c·∫£ role .C√°i highest c√≥ th·ªÉ c√≥ bug"
		"`rolerewards reset`: Resets role"
		"`rolerewards view`: Xem settings for role rewards."
	)
	"color" 14232643
}}
{{ if .CmdArgs }}
	{{ $roleRewards := sdict "type" "stack" }}
	{{ with (dbGet 0 "roleRewards") }}
		{{ $roleRewards = sdict .Value }} 
	{{ end }}
	{{ $cmd := index .CmdArgs 0 }} 
 
	{{ if and (eq $cmd "add") (ge (len .CmdArgs) 3) }}
		{{ $level := index .CmdArgs 1 | toInt }} 
		{{ $input := slice .CmdArgs 2 | joinStr " " | lower }} 
 
		{{ $exactRole := 0 }}
		{{ $maybeRole := 0 }}
		
		{{ with reFindAllSubmatches `^<@&(\d{17,19})>|(\d{17,19})$` $input }}
			{{ $id := toInt (or (index . 0 1) (index . 0 2)) }}
			{{ range $.Guild.Roles }}
				{{- if eq .ID $id }} {{ $exactRole = . }} {{ end -}}
			{{ end }}
		{{ else }}
			{{ range .Guild.Roles }}
				{{- if eq (lower .Name) (lower $input) }} {{ $exactRole = . }}
				{{- else if inFold (lower .Name) (lower $input) }} {{ $maybeRole = . }}
				{{- end -}}
			{{ end }}
		{{ end }}
 
		{{ $role := or $exactRole $maybeRole }}
		{{ if and $level $role }}
			{{ if and (ge $level 1) (le $level 200) }} 
				{{ $roleRewards.Set (str $level) $role.ID }}
				{{ $s := dbSet 0 "roleRewards" $roleRewards }} 
				Set the role `{{ $role.Name }}` to be given at the level `{{ $level }}`.
			{{ else }}
				Sorry, level ƒëang kh√¥ng trong kho·∫£ng t·ª´ 1-200.
			{{ end }}
		{{ else }}
			Sorry, role ho·∫∑c c·∫•p ƒëang kh√¥ng h·ª£p l·ªá.
		{{ end }}
 
	{{ else if and (eq $cmd "set-type") (ge (len .CmdArgs) 2) }}
		{{ $type := index .CmdArgs 1 }}
		{{ if not (in (cslice "stack" "highest") $type) }}
			Sorry t·ªõ ch·ªâ c√≥ 2 lo·∫°i l√† "stack" or "highest".
		{{ else }}
			{{ $roleRewards.Set "type" $type }}
			{{ $s := dbSet 0 "roleRewards" $roleRewards }}
			ƒê√£ set lo·∫°i role-giving c·ªßa server sang `{{ $type }}`.
		{{ end }}
 
	{{ else if eq $cmd "reset" }}
		{{ $s := dbSet 0 "roleRewards" (sdict "type" "stack") }} 
		T·ªõ ƒë√£ clear the role rewards c·ªßa server!
 
	{{ else if and (eq $cmd "remove") (ge (len .CmdArgs) 2) }}
		{{ with (reFind `\d+` (index .CmdArgs 1)) }} 
			{{ if $roleRewards.Get . }}
				{{ $roleRewards.Del . }}
				{{ $s := dbSet 0 "roleRewards" $roleRewards }}
				ƒê√£ remove role reward c·ªßa level `{{ . }}`.
			{{ else }}
				Sorry, not a role reward set for that level!
			{{ end }}
		{{ else }}
			Vui l√≤ng cung c·∫•p level h·ª£p l·ªá ƒë·ªÉ remove role reward.
		{{ end }}
 
	{{ else if eq $cmd "view" }}
		{{ if eq (len $roleRewards) 1 }}
			{{ sendMessage nil (cembed "title" "Role Rewards" "thumbnail" (sdict "url" "https://static.wikia.nocookie.net/leagueoflegends/images/4/48/Summonerscup.jpg/revision/latest?cb=20150918135411") "description" (joinStr "" "**‚ùØ Role Rewards:** n/a\n**‚ùØ Type:** " $roleRewards.type)) }}
		{{ else }}
			{{ $out := "" }} 
			{{- range $level := seq 1 201 -}} 
				{{ with ($roleRewards.Get (str $level)) }}
					{{ $out = printf "%s\n‚ùØ **Level %d:** <@&%d>" $out $level . }}
				{{ end }}
			{{- end -}}
			{{ sendMessage nil (cembed "title" "Role Rewards" "thumbnail" (sdict "url" "https://static.wikia.nocookie.net/leagueoflegends/images/4/48/Summonerscup.jpg/revision/latest?cb=20150918135411") "description" (joinStr "" $out "\n\n" "**‚ùØ Type:** " $roleRewards.type)) }}
		{{ end }}
 
	{{ else }}
		{{ sendMessage nil $helpMessage }}
	{{ end }}
{{ else }}
	{{ sendMessage nil $helpMessage }}
{{ end }}